[ 객체 ]
	-의사나 행위가 미치는 대상
		-사람 , 자동차, 건물 등
		-주문, 생산, 관리 등
				-->강사(김현수) 기준에서 학생(유재석) 객체
				-->학생(유재석) 기준에서 강사(김현수) 객체
	-객(손님)체
[ 객체지향 프로그래밍 ]
	-어떤 대상(객체)을 가지고 프로그래밍한다.
[ 클래스 ]
	- 객체의 속성과 기능을 코드로 구현한 것
		- 속성 : 대상의 본질적인 특징/성질/특성 		*멤버변수
		 //- 기능 : 대상의 작동/행위/이벤트			*메소드(멤버함수)
	- 클래스 형태
		class 클래스명{ 멤버변수;메소드;}
		*class이름 짓는 규칙 : 대문자로 시작한다.
	*객체 만들기 위한 객체의 일종의 틀(설계도)
	- 클래스 사용처 : 1. 객체 설계도 클래스 2. main함수 갖는 실행 클래스
[ 예시 ]
	예시1 ] 학생,
		속성(멤버변수) : 학번,이름,학년,사는 곳 등등
		기능(메소드) : 공부하기, 잠자기, 버스타기 등등
		public class student{
			int studentID;
			String studentName;
			int grade;
			String address;
		}
	예시2 ] 자동차
		- 속성(멤버변수) : 제조사, 차량번호, 색상, 현재속도, 엔진상태
		//- 기능(메소드) : 전진(속도증가), 주차
		public class Car{
		 	String 제조사;
		 	int 현재속도;
		 	Striing 차량번호;
		}
		
	예시3 ] 주문
		- 속성(멤버변수) : 주문번호, 제품명, 수량, 주문날짜
		- 클래스 코드 표현
		public class Order{
			 String 주문번호;
			 String 제품명;
			 int 수량;
		}
		
	[ 배열 ]
	1.정의 : 동일한 자료형/타입 이 같은 자료 여러개를 한번에 관리 하는 자료구조이다.
	2.선언 :
		타입[] 변수명 = new 타입[길이];
		- 타입 : 배열에 저장할 자료들의 공통 타입 
		- new : 객체/배열 생성하기 위한 키워드/예약어
		- [길이] : 배열에 저장할 자료의 최대 개수 **고정길이**
			- 주의할점 : 선언된 이후 배열의 길이는 변경이 불가능하다.
	
	3. 배열 초기화
		1. 타입[] 변수명 = new 타입[]{ 값1 , 값2, 값3 }
		2. 타입[] 변수명 = { 값1 , 값2 , 값3 }
		3. 타입[] 변수명;
		변수명 = new 타입[]{ 값1 , 값2 , 값3 }
		
	4. 배열 요소의 기본값 : 배열 요소의 초기값이 없을때 자동으로 들어가는 값 
		- 정수는 0 , 실수는 0.0 , 객체 null , 논리 false
		 
	5. 배열 사용 : [ ] 대괄호
		- 인덱스 : 배열내 요소 값이 저장된 순서번호 , 0번부터 시작
	 	1. 배열 전체 호출 
	 		배열변수명						* 배열 주소(가상메모리위치)
	 		Arrays.toString( 배열변수명 )	* 배열 전체 요소 
		2. 배열 특정 요소 값 호출 
			배열변수명[ 인덱스 ]
	
	6. 배열의 길이 속성 
		- 배열변수명.length
		
	7. 배열과 반복문 관계 
		- 배열은 인덱스라는 저장순서 번호가 규칙이 존재한다.
		- 인덱스 의 규칙 : 0번부터 1씩 증가 하면서 마지막 요소까지 번호 부여한다.
			- 배열의 마지막 인덱스 : 배열변수명.length - 1
		- 배열의 전체 요소를 순회(요소 하나씩 조회)
		for( int index = 0 ; index <= 배열변수명.length - 1 ; index++ ){
			배열변수명[index]
		}
		
	[ 메소드 ] 멤버함수 또는 메소드
		1. 정의 : 하나의 기능을 수행하는 일련의 코드 , 여러코드(명령어) 들을 묶음으로 저장 역할
		2. 함수 정의/만들기
			타입타입 함수명(타입 매개변수1, 타입 매개변수2){
				실행코드;
				return 반환값|반환이 없으면 생략
			}
			1. 함수이름 : 변수명과 동일하게 임의, 카멜표기법 권장
			2. 매개변수 : 함수의 입력으로 받는 변수 
			3. 인수값의 타입과 매개변수 타입은 일치 해야한다.
				1. 매개변수는 없을 수도 있다.
				2. 함수 호출/사용시 인수값을 중매(연결)해서 대입받는 변수
			3. 반환값 : 함수를 수행한 후 결과로 되돌려주는 값	*반환값 없을 수도 있다. : 반환타입void
				1. return : 1.반환값  되돌려주는 역할 2. 함수종료
				2. 반환값도 없을수도 있다. 반환타입 void
				3. 반환값의 타입과 반환타입은 일치해야한다.
				