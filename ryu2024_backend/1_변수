[변수]
   - 변하는 수 
   - 값을 넣을 수 있는 빈 그릇과 같습니다.
   1. 변수 형태 
      자료형 변수명 = 리터럴;
   2. 변수 선언 
      1. 선언 : 자료형 변수명;
      2. 초기화 : 자료형 변수명 = 리터럴;
   3. 변수명 주의할점
      1. 숫자로 시작 불가능하다.
      2. 특수문자 _ 와 $ 사용 하고 띄어쓰기 불가능하다
      3. 키워드(예약어) : if for int 등등 불가능하다.
      * 카멜표기법 : 소문자로 시작하고 두번째 단어는 첫글자를 대문자 한다.
      numberofStudent -> numberOfStudent
   4. 변수의 값 호출 
      변수명
      
   5. 변수의 값 수정 
      변수명 = 새로운값
      
[리터럴]
   - 데이터 그자체, 키보드로 부터 입력한 자료 
   - 자바 리터럴은 : 논리boolean , 문자char , 정수int , 실수double
   
[ 자료형/타입 ]
   - 타입 , 자료의 형식 , 자료를 분류하는 방법
   1. 목적 : 타입의 저장범위를 고려하여 저장할 데이터를 적합하게 선택하여 사용하므로 효율성을 높일수 있다. ( 설계 )
   2. 종류 
   - 자바 기본 타입 , 8가지 (+String클래스타입)
         [키워드]      [용량]      [저장범위]
    [논리]boolean      1바이트      true 혹은 false 
   
    [문자]char   		  2바이트      유니코드 , 작은따옴표로 감싼 문자      , 'A'
         *String      N바이트      문자열클래스 , 큰따옴표로 감싼 문자열   , "ABC"
         
    [정수]byte         1바이트      -128 ~ +127 저장 
         short        2바이트      +-3만정도 저장 
         int          4바이트      +-21억정도 저장 , 리터럴정수(키보드로 입력한 정수) , 정수중에 기본타입
         long         8바이트      +-21억이상 저장 , 리터럴정수 뒤에 L/l 붙이기 
         
   [실수 , 부동소수점 ]
         float      4바이트      소수점8자리 표현 , 실수리터럴 뒤에 F/f 붙이기 
         double      8바이트      소수점17자리 표현 , 실수리터럴 , 실수중에 기본타입

[ 부동 소수점 ]
   * 0 과 1 사이의 실수는 끝없는 무한대 표현 가능하므로 , 컴퓨터 한계를 만들었다.
   - 지수부 : 숫자의 크기를 조정하는 역할 ex] 몇승
   - 가수부 : 숫자의 유효 자릿수를 표현 ex] 숫자 자체
   float : 부호1비트, 지수부8비트 , 가수부23비트
   double : 부호1비트, 지수부11비트 , 가수부52비트 
      ex] 데이터 : 1000000 , 가수 : 1 , 지수 : 6 ( 10을 6번 곱해야 함 ) , 1.0*10^6
   - 실제 연산이 중요한 부분에 업무에서는 실수타입 사용하는데 한계(오차) , 해결법:라이브러리 BigDecimal 또는 문자열 처리 
   
[ 소수 자릿수를 이동하는 방법 ]
   100.0 * 10 : 1000.0
   100.0 / 10 : 10.0
   
[ 상수 ]
	-초기화 이후 변하지 않는 값
	-final 키워드
	-상수명은 관례적으로 대문자로 사용한다.
[ 리터럴 ] 
	- 개발자가 키보드로부터 입력한 숫자, 문자, 논리 등등 일컫는 말
	- 자바는 이러한 리터럴값들을 상수풀(메모리공간)이라는 곳에서 *상수*로 저장한다.

[ 타입변환 ]
	1. 자동 타입 변환, 묵시적 형 변환
		- 1. 메모리 크기가 작은 것 부터 큰 순으로 변환
		- 2. 데이터의 손실이 없다,
		- 3. 연산(계산) 중에 큰 값으로 변환된다.(메모리 손실 방지)
		- byte -> short , char -> int -> long ->  
   
  [변수 유형에 따른 용도 ] 
  1. 지역 변수 : 
  		설명 : 특정한 {}안에서 선언 한 변수
  		범위 : 선언된 특정한{} 내부 안에서만 사용
  		메모리 : 스택메모리
  		생성소멸 : 함수가 실행될 때 생성되고 함수가 종료될 대 소멸된다.
  2. 매개변수 : 
  		-설명 : 함수 호출시 함수에게 전달하는 값을 대입받는 변수
  		- 선언 : 함수선언시 함수명(타입 매개변수 , 타입 매개변수 ){ }
  		- 범위/메모리/생성소멸은 지역변수와 같다.
  
  3. 멤버변수 : 
  		- 설명 : 클래스{}이고 함수 {}밖에서 선언된 변수,객체의 속성/특성
  		- 선언 : 객체 멤버 변수로 선언
  		- 범위 : private이면 현재 클래스에서만 사용하고 아니면 다른 클래스에서 사용이 가능하다.
  		- 메모리 : 힙 메모리
  		- 생성소멸 : 인스턴스가 생성될 때 힙에 생성되고, GC가비지 메모리 수거할 때 소멸된다. 
  			*(쓰레기)수거기준 : 참조 당하지 않는 인스턴스
   
   4. static 변수 : 
   		-설명 : 프로그램 전체에서 사용되는 변수, 주로 전역변수로 사용
   		- 선언 : static예약어를 사용하여 클래스 내부에 선언
   		- 범위 : priavate이면 현재클래스에서만 사용하고 아니면 다른클래스에서 사용이 가능하다.
   		- 메모리 : 데이터 영역
   		- 생성소멸 : 프로그램이 처음 시작할 때 상수와 함께 데이터 영역에 생성되고 프로그램이 끝나면 메모리가 소멸된다.
   
